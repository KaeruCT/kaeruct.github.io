<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Pejibaye Blog (Posts about letsencrypt)</title><link>http://kaeruct.github.io/</link><description></description><atom:link rel="self" href="http://kaeruct.github.io/categories/letsencrypt.xml" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Wed, 04 Jan 2023 16:46:55 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>How to use Let's Encrypt certificates with Keycloak</title><link>http://kaeruct.github.io/posts/how-to-use-lets-encrypt-certificates-with-keycloak.html</link><dc:creator>Andr√©s Villarreal</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img alt="Let's Encrypt + Keycloak" src="http://kaeruct.github.io/letsencrypt_keycloak.png"&gt;&lt;/p&gt;
&lt;p&gt;Keycloak provides user federation, strong authentication, user management, fine-grained authorization, and more. &lt;/p&gt;
&lt;p&gt;Here is a guide to enable HTTPS access to your Keycloak server using a free Let's Encrypt SSL certificate. The beauty of Let's Encrypt is its ease of use and the fact that it's free!&lt;/p&gt;
&lt;p&gt;This guide assumes you have already installed Keycloak at &lt;code&gt;/opt/keycloak/&lt;/code&gt; using the &lt;a href="https://www.keycloak.org/getting-started/getting-started-zip"&gt;official guide for bare metal installs&lt;/a&gt;, and now you want to enable HTTPS access. You need to have version &lt;strong&gt;20&lt;/strong&gt; or higher.&lt;/p&gt;
&lt;p&gt;In all the instructions below, be sure to replace &lt;code&gt;&amp;lt;DOMAIN&amp;gt;&lt;/code&gt; with the actual domain you will be using. All commands in this guide must be run as root.&lt;/p&gt;
&lt;h3&gt;1. Install certbot&lt;/h3&gt;
&lt;p&gt;First you will need to install &lt;code&gt;certbot&lt;/code&gt;. This depends on the Linux distro you are using.&lt;/p&gt;
&lt;p&gt;For example, for apt-based distros such as Debian or Ubuntu, you can just run the following:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;apt install certbot
&lt;/pre&gt;


&lt;h3&gt;2. Create HTTPS certificates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Set up certificates:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ certbot certonly --standalone --preferred-challenges http -d &amp;lt;DOMAIN&amp;gt;
&lt;/pre&gt;


&lt;h3&gt;3. Configure Keycloak to use Let's Encrypt certificates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Change configuration:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;vi /opt/keycloak/conf/keycloak.conf
&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;Add or update the following lines in that file:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;https-certificate-file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/etc/letsencrypt/live/&amp;lt;DOMAIN&amp;gt;/cert.pem&lt;/span&gt;
&lt;span class="na"&gt;https-certificate-key-file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/etc/letsencrypt/live/&amp;lt;DOMAIN&amp;gt;/privkey.pem&lt;/span&gt;
&lt;span class="na"&gt;hostname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;DOMAIN&amp;gt;&lt;/span&gt;

&lt;span class="na"&gt;https-port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;443&lt;/span&gt;
&lt;span class="na"&gt;http-port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;80&lt;/span&gt;
&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;Update keycloak config:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ /opt/keycloak/bin/kc.sh build
&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;You're done! Now you can run the following command and Keycloak should now be accessible from the browser via HTTPS:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ /opt/keycloak/bin/kc.sh start
&lt;/pre&gt;


&lt;h3&gt;4. Optional: Set up Keycloak as a systemd service&lt;/h3&gt;
&lt;p&gt;The official guide purposely leaves this open-ended because there are many ways in which you might want to handle the lifecycle of the Keycloak server. However, I think a good approach is to just use &lt;a href="https://systemd.io/"&gt;systemd&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;4.1. Set up systemd service&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Create user and group:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ useradd -g keycloak keycloak
&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;Give access to certificates:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ chmod &lt;span class="m"&gt;0755&lt;/span&gt; /etc/letsencrypt/&lt;span class="o"&gt;{&lt;/span&gt;live,archive&lt;span class="o"&gt;}&lt;/span&gt;
$ chgrp keycloak /etc/letsencrypt/&lt;span class="o"&gt;{&lt;/span&gt;live,archive&lt;span class="o"&gt;}&lt;/span&gt;
$ chgrp -h keycloak /etc/letsencrypt/live/&amp;lt;DOMAIN&amp;gt;/privkey.pem
&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;Give access to Keycloak directory:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ chown -R keycloak:keycloak /opt/keycloak/
&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;Create systemd service:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ vi /etc/systemd/system/keycloak.service
&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;Write the following contents into the file. You might need to add your chosen database service to the &lt;code&gt;After&lt;/code&gt; line, for example &lt;code&gt;postgresql.service&lt;/code&gt; or &lt;code&gt;mysql.service&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[Unit]&lt;/span&gt;
&lt;span class="na"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Keycloak Application Server&lt;/span&gt;
&lt;span class="na"&gt;After&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;syslog.target network.target&lt;/span&gt;

&lt;span class="k"&gt;[Service]&lt;/span&gt;
&lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;idle&lt;/span&gt;
&lt;span class="na"&gt;User&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;keycloak&lt;/span&gt;
&lt;span class="na"&gt;Group&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;keycloak&lt;/span&gt;
&lt;span class="na"&gt;LimitNOFILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;102642&lt;/span&gt;
&lt;span class="na"&gt;ExecStart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/opt/keycloak/bin/kc.sh start --optimized&lt;/span&gt;
&lt;span class="na"&gt;StandardOutput&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;append:/var/log/keycloak.log&lt;/span&gt;
&lt;span class="na"&gt;StandardError&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;inherit&lt;/span&gt;
&lt;span class="na"&gt;RestartSec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;2s&lt;/span&gt;
&lt;span class="na"&gt;Restart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;always&lt;/span&gt;
&lt;span class="na"&gt;AmbientCapabilities&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;CAP_NET_BIND_SERVICE&lt;/span&gt;

&lt;span class="k"&gt;[Install]&lt;/span&gt;
&lt;span class="na"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;multi-user.target&lt;/span&gt;
&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;Reload systemd config and start service:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ systemctl daemon-reload
$ systemctl start keycloak.service
&lt;/pre&gt;


&lt;h4&gt;4.2. Automatic Keycloak server restart when certificates are updated&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Make certbot restart Keycloak after updating certificates:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /etc/letsencrypt/renewal-hooks/deploy
$ vi restart-keycloak.sh
&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;Write these contents:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
systemctl restart keycloak
&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;Make the script executable:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ chmod +x restart-keycloak.sh
&lt;/pre&gt;


&lt;p&gt;You're done! Now Keycloak is set up as a systemd service and will start when your machine boots up.&lt;/p&gt;&lt;/div&gt;</description><category>java</category><category>keycloak</category><category>letsencrypt</category><category>linux</category><category>tips</category><category>tutorials</category><guid>http://kaeruct.github.io/posts/how-to-use-lets-encrypt-certificates-with-keycloak.html</guid><pubDate>Wed, 04 Jan 2023 16:28:41 GMT</pubDate></item></channel></rss>